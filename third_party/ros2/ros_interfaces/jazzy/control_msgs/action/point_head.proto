// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from control_msgs:action/PointHead.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package control_msgs.action.pb.jazzy;

import "third_party/ros2/ros_interfaces/jazzy/builtin_interfaces/msg/duration.proto";
import "third_party/ros2/ros_interfaces/jazzy/builtin_interfaces/msg/time.proto";
import "third_party/ros2/ros_interfaces/jazzy/geometry_msgs/msg/point_stamped.proto";
import "third_party/ros2/ros_interfaces/jazzy/geometry_msgs/msg/vector3.proto";
import "third_party/ros2/ros_interfaces/jazzy/unique_identifier_msgs/msg/uuid.proto";

option cc_generic_services = true;

message PointHead_Goal {
  geometry_msgs.msg.pb.jazzy.PointStamped target = 107953079;
  geometry_msgs.msg.pb.jazzy.Vector3 pointing_axis = 426413412;
  string pointing_frame = 253666489;
  builtin_interfaces.msg.pb.jazzy.Duration min_duration = 118093469;
  double max_velocity = 268286937;
}

message PointHead_SendGoal_Request {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 108866210;
  control_msgs.action.pb.jazzy.PointHead_Goal goal = 484248182;
}

message PointHead_SendGoal_Response {
  bool accepted = 371066354;
  builtin_interfaces.msg.pb.jazzy.Time stamp = 357477059;
}

message PointHead_Result {
  uint32 structure_needs_at_least_one_member = 407246362;
}

message PointHead_GetResult_Request {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 108866210;
}

message PointHead_GetResult_Response {
  int32 status = 453014720;
  control_msgs.action.pb.jazzy.PointHead_Result result = 325764348;
}

message PointHead_Feedback {
  double pointing_angle_error = 514098795;
}

message PointHead_FeedbackMessage {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 108866210;
  control_msgs.action.pb.jazzy.PointHead_Feedback feedback = 304701367;
}

service PointHead {
  rpc SendGoal(PointHead_SendGoal_Request)
      returns (PointHead_SendGoal_Response);
  rpc GetResult(PointHead_GetResult_Request)
      returns (PointHead_GetResult_Response);
}
