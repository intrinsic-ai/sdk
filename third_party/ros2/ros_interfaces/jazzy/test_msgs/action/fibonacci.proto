// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from test_msgs:action/Fibonacci.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package test_msgs.action.pb.jazzy;

import "third_party/ros2/ros_interfaces/jazzy/builtin_interfaces/msg/time.proto";
import "third_party/ros2/ros_interfaces/jazzy/unique_identifier_msgs/msg/uuid.proto";

option cc_generic_services = true;

message Fibonacci_Goal {
  sfixed32 order = 1;
}

message Fibonacci_SendGoal_Request {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 1;
  test_msgs.action.pb.jazzy.Fibonacci_Goal goal = 2;
}

message Fibonacci_SendGoal_Response {
  bool accepted = 1;
  builtin_interfaces.msg.pb.jazzy.Time stamp = 2;
}

message Fibonacci_Result {
  repeated sfixed32 sequence = 1;
}

message Fibonacci_GetResult_Request {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 1;
}

message Fibonacci_GetResult_Response {
  int32 status = 1;
  test_msgs.action.pb.jazzy.Fibonacci_Result result = 2;
}

message Fibonacci_Feedback {
  repeated sfixed32 sequence = 1;
}

message Fibonacci_FeedbackMessage {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 1;
  test_msgs.action.pb.jazzy.Fibonacci_Feedback feedback = 2;
}

service Fibonacci {
  rpc SendGoal(Fibonacci_SendGoal_Request)
      returns (Fibonacci_SendGoal_Response);
  rpc GetResult(Fibonacci_GetResult_Request)
      returns (Fibonacci_GetResult_Response);
}
