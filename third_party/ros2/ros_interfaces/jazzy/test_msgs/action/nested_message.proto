// generated from rosidl_adapter_proto/resource/idl.proto.em
// with input from test_msgs:action/NestedMessage.idl
// generated code does not contain a copyright notice

syntax = "proto3";

package test_msgs.action.pb.jazzy;

import "third_party/ros2/ros_interfaces/jazzy/builtin_interfaces/msg/time.proto";
import "third_party/ros2/ros_interfaces/jazzy/test_msgs/msg/basic_types.proto";
import "third_party/ros2/ros_interfaces/jazzy/test_msgs/msg/builtins.proto";
import "third_party/ros2/ros_interfaces/jazzy/unique_identifier_msgs/msg/uuid.proto";

option cc_generic_services = true;

message NestedMessage_Goal {
  test_msgs.msg.pb.jazzy.Builtins nested_field_no_pkg = 185392859;
  test_msgs.msg.pb.jazzy.BasicTypes nested_field = 217659525;
  builtin_interfaces.msg.pb.jazzy.Time nested_different_pkg = 275941028;
}

message NestedMessage_SendGoal_Request {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 108866210;
  test_msgs.action.pb.jazzy.NestedMessage_Goal goal = 484248182;
}

message NestedMessage_SendGoal_Response {
  bool accepted = 371066354;
  builtin_interfaces.msg.pb.jazzy.Time stamp = 357477059;
}

message NestedMessage_Result {
  test_msgs.msg.pb.jazzy.Builtins nested_field_no_pkg = 185392859;
  test_msgs.msg.pb.jazzy.BasicTypes nested_field = 217659525;
  builtin_interfaces.msg.pb.jazzy.Time nested_different_pkg = 275941028;
}

message NestedMessage_GetResult_Request {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 108866210;
}

message NestedMessage_GetResult_Response {
  int32 status = 453014720;
  test_msgs.action.pb.jazzy.NestedMessage_Result result = 325764348;
}

message NestedMessage_Feedback {
  test_msgs.msg.pb.jazzy.Builtins nested_field_no_pkg = 185392859;
  test_msgs.msg.pb.jazzy.BasicTypes nested_field = 217659525;
  builtin_interfaces.msg.pb.jazzy.Time nested_different_pkg = 275941028;
}

message NestedMessage_FeedbackMessage {
  unique_identifier_msgs.msg.pb.jazzy.UUID goal_id = 108866210;
  test_msgs.action.pb.jazzy.NestedMessage_Feedback feedback = 304701367;
}

service NestedMessage {
  rpc SendGoal(NestedMessage_SendGoal_Request)
      returns (NestedMessage_SendGoal_Response);
  rpc GetResult(NestedMessage_GetResult_Request)
      returns (NestedMessage_GetResult_Response);
}
