name: Intrinsic SDK Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag to create a release for"
        required: true
        type: string
  push:
    tags:
      - '*'

jobs:
  build-inctl-inbuild-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Determine Checkout Ref
        id: checkout_ref
        run: |
          REF=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ -n "${{ github.event.inputs.tag }}" ]]; then
              REF="${{ github.event.inputs.tag }}"
              echo "Checking out specified tag: $REF"
            else
              echo "No tag specified for manual dispatch. This workflow requires a tag for manual dispatch."
              exit 1
            fi
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            REF="${{ github.ref }}"
            echo "Checking out pushed tag: $REF"
          fi
          echo "ref=$REF" >> $GITHUB_OUTPUT 
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{steps.checkout_ref.outputs.ref }}
          fetch-depth: 0
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be  # v1.3.1
        with:
          tool-cache: verbose_failures
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - uses: bazel-contrib/setup-bazel@0.14.0
        with:
         # Avoid downloading Bazel every time.
         bazelisk-cache: true
         # Store build cache per workflow.
         disk-cache: ${{ github.workflow }} 
         # Cache external/ repositories
         external-cache: true
         # Share repository cache between workflows.
         repository-cache: true

      - name: Stamp Build
        run: |
          CANDIDATE_NAME="${GITHUB_REF_NAME##*/}"  # remove prefix
          echo "build --stamp" >> .bazelrc
          echo "build --workspace_status_command=\"echo STABLE_SDK_VERSION ${CANDIDATE_NAME}\""  >> .bazelrc

      - name: Build inctl and inbuild
        run: |
          bazel build //intrinsic/tools/inctl:inctl_external //intrinsic/tools/inbuild:inbuild
          cp bazel-bin/intrinsic/tools/inctl/inctl_external_/inctl_external inctl-linux-amd64
          cp bazel-bin/intrinsic/tools/inbuild/inbuild_/inbuild inbuild-linux-amd64

      - name: Download Versioned IntrinsicOS SBOM
        id: sbom_download
        uses: ./.github/actions/download-intrinsic-os-sbom

      - name: Install dependencies
        run: pip install GitPython==3.1.44

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euox pipefail

          echo "Creating new release for tag ${{ steps.checkout_ref.outputs.ref }}"

          # Execute the Python script, passing arguments directly
          python3 doc_gen/release_notes_gen.py \
            --repo-path "${GITHUB_WORKSPACE}" \
            --last-release-tag "${{ steps.checkout_ref.outputs.ref }}"

          echo "== Generated release notes =="
          cat RELEASE_NOTES.md
          echo "============================="

          gh release create "${{ steps.checkout_ref.outputs.ref }}" \
            ./inbuild-linux-amd64 \
            ./inctl-linux-amd64 \
            "${{ steps.sbom_download.outputs.sbom-local-path}}" \
            --title "Intrinsic SDK ${{ steps.checkout_ref.outputs.ref }}" \
            --notes-file RELEASE_NOTES.md \
            --draft=false
