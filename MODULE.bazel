# Copyright 2023 Intrinsic Innovation LLC

module(
    name = "ai_intrinsic_sdks",
    version = "",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.16.0")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_pkg", version = "1.1.0")

non_module_deps = use_extension("//bazel:non_module_deps.bzl", "non_module_deps_ext")

##########
# Go
##########

bazel_dep(name = "rules_go", version = "0.53.0", repo_name = "io_bazel_rules_go")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.24.2")

bazel_dep(name = "gazelle", version = "0.42.0", repo_name = "bazel_gazelle")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    # go/keep-sorted start
    "com_github_authzed_authzed_go",
    "com_github_bazelbuild_buildtools",
    "com_github_bazelbuild_remote_apis_sdks",
    "com_github_bits_and_blooms_bitset",
    "com_github_cenkalti_backoff_v4",
    "com_github_golang_glog",
    "com_github_golang_jwt_jwt_v4",
    "com_github_google_go_cmp",
    "com_github_google_go_containerregistry",
    "com_github_google_subcommands",
    "com_github_gorilla_websocket",
    "com_github_pborman_uuid",
    "com_github_pkg_errors",
    "com_github_protocolbuffers_txtpbfmt",
    "com_github_robfig_cron_v3",
    "com_github_rs_xid",
    "com_github_spf13_cobra",
    "com_github_spf13_pflag",
    "com_github_spf13_viper",
    "com_github_stoewer_go_strcase",
    "com_google_cloud_go_longrunning",
    "in_gopkg_yaml_v3",
    "io_opencensus_go",
    "io_opencensus_go_contrib_exporter_ocagent",
    "io_opencensus_go_contrib_exporter_prometheus",
    "io_opencensus_go_contrib_exporter_stackdriver",
    "org_golang_google_genproto",
    "org_golang_google_genproto_googleapis_api",
    "org_golang_google_genproto_googleapis_rpc",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_exp",
    "org_golang_x_net",
    "org_golang_x_sync",
    "org_golang_x_text",
    "org_uber_go_atomic",
    # go/keep-sorted end
)

##########
# Python
##########

bazel_dep(name = "rules_python", version = "1.3.0")

# The root module defines the default toolchain version.
# If it doesn't find dependencies which that version it errors out.
# It seems to be best practice to just declare all compatible versions in dependencies.
PYTHON_VERSIONS = [
    "3.11",
]

python = use_extension("@rules_python//python/extensions:python.bzl", "python")

[
    python.toolchain(
        # Choose last version as default.
        is_default = python_version == PYTHON_VERSIONS[-1],
        python_version = python_version,
    )
    for python_version in PYTHON_VERSIONS
]
use_repo(python, system_python = "python_3_11")

bazel_dep(name = "pybind11_bazel", version = "2.13.6")
bazel_dep(name = "pybind11_abseil", version = "202402.0")
bazel_dep(name = "pybind11_protobuf", version = "0.0.0-20250210-f02a2b7")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

[
    pip.parse(
        # Enable the Bazel downloader for whl fetches, see
        # https://rules-python.readthedocs.io/en/latest/pypi-dependencies.html#bazel-downloader-and-multi-platform-wheel-hub-repository.
        experimental_index_url = "https://pypi.org/simple",
        experimental_index_url_overrides = {
            "blender-headless": "https://us-central1-python.pkg.dev/intrinsic-mirror/intrinsic-public-python/simple",
            "cadexchanger": "https://download.cadexchanger.com/python",
            "proto-breaking-change-detector": "https://github.com/googleapis",
            "tensorflow": "https://us-central1-python.pkg.dev/intrinsic-mirror/intrinsic-public-python/simple",
        },
        hub_name = "ai_intrinsic_sdks_pip_deps",
        python_version = python_version,
        requirements_lock = "//:requirements.txt",
    )
    for python_version in PYTHON_VERSIONS
]

use_repo(pip, "ai_intrinsic_sdks_pip_deps")

##########
# C++
##########

bazel_dep(name = "toolchains_llvm", version = "1.4.0")

use_repo(non_module_deps, "com_googleapis_storage_chrome_linux_amd64_sysroot")

# Inspect supported toolchains at https://github.com/bazel-contrib/toolchains_llvm/blob/master/toolchain/internal/llvm_distributions.bzl
llvm = use_extension(
    "@toolchains_llvm//toolchain/extensions:llvm.bzl",
    "llvm",
    dev_dependency = True,
)
llvm.toolchain(
    llvm_version = "19.1.0",
)
llvm.sysroot(
    label = "@com_googleapis_storage_chrome_linux_amd64_sysroot//:all_files",
    targets = ["linux-x86_64"],
)
use_repo(llvm, "llvm_toolchain")

register_toolchains(
    "@llvm_toolchain//:all",
    dev_dependency = True,
)

bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")

##########
# Java
##########

bazel_dep(name = "rules_java", version = "8.11.0")

##########
# Containers
##########

bazel_dep(name = "rules_oci", version = "2.2.5")
bazel_dep(name = "container_structure_test", version = "1.19.1")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:6ae5fe659f28c6afe9cc2903aebc78a5c6ad3aaa3d9d0369760ac6aaea2529c8",
    image = "gcr.io/distroless/base",
    platforms = ["linux/amd64"],
)
oci.pull(
    name = "distroless_cc",
    digest = "sha256:3310655aac0d85eb9d579792387af1ff3eb7a1667823478be58020ab0e0d97a8",
    image = "gcr.io/distroless/cc",
    platforms = ["linux/amd64"],
)
oci.pull(
    name = "distroless_python3",
    digest = "sha256:1b8a214aad17b69de4d08638754c250be842890c0fb94f40e7acf5c0b30c451b",
    image = "gcr.io/distroless/python3",
    platforms = ["linux/amd64"],
)

# BUG Bazel reports wrong repo usage: https://github.com/bazel-contrib/rules_oci/issues/727
use_repo(
    oci,
    "distroless_base",
    "distroless_base_linux_amd64",
    "distroless_cc",
    "distroless_cc_linux_amd64",
    "distroless_python3",
    "distroless_python3_linux_amd64",
)

############################
# Missing Google OSS files #
############################

use_repo(
    non_module_deps,
    # go/keep-sorted start
    "com_google_xls_strong_int_h",
    # go/keep-sorted end
)

##########
# Other  #
##########

# go/keep-sorted start
bazel_dep(name = "abseil-cpp", version = "20250127.1", repo_name = "com_google_absl")
bazel_dep(name = "abseil-py", version = "2.1.0", repo_name = "com_google_absl_py")
bazel_dep(name = "boringssl", version = "0.20241024.0")
bazel_dep(name = "cel-cpp", version = "0.11.0", repo_name = "com_google_cel_cpp")
bazel_dep(name = "eigen", version = "4.0.0-20241125", repo_name = "com_gitlab_libeigen_eigen")
bazel_dep(name = "flatbuffers", version = "25.2.10", repo_name = "com_github_google_flatbuffers")
bazel_dep(name = "fuzztest", version = "20241028.0", repo_name = "com_google_fuzztest")
bazel_dep(name = "google_benchmark", version = "1.8.4", repo_name = "com_github_google_benchmark")
bazel_dep(name = "googleapis", version = "0.0.0-20241220-5e258e33.bcr.1", repo_name = "com_google_googleapis")
bazel_dep(name = "googleapis-cc", version = "1.0.0")
bazel_dep(name = "googleapis-go", version = "1.0.0")
bazel_dep(name = "googleapis-grpc-cc", version = "1.0.0")
bazel_dep(name = "googleapis-grpc-java", version = "1.0.0")
bazel_dep(name = "googleapis-java", version = "1.0.0")
bazel_dep(name = "googleapis-python", version = "1.0.0")
bazel_dep(name = "googletest", version = "1.15.2", repo_name = "com_google_googletest")
bazel_dep(name = "grpc", version = "1.73.1", repo_name = "com_github_grpc_grpc")
bazel_dep(name = "grpc_ecosystem_grpc_gateway", version = "2.26.1", repo_name = "com_github_grpc_ecosystem_grpc_gateway_v2")
bazel_dep(name = "jsonnet", version = "0.20.0.bcr.1")
bazel_dep(name = "opencensus-cpp", version = "0.0.0-20230502-50eb5de", repo_name = "io_opencensus_cpp")
bazel_dep(name = "protobuf", version = "30.1", repo_name = "com_google_protobuf")
bazel_dep(name = "protobuf-matchers", version = "0.1.1", repo_name = "com_github_inazarenko_protobuf_matchers")
bazel_dep(name = "protoc-gen-validate", version = "1.2.1.bcr.1")
bazel_dep(name = "re2", version = "2024-07-02", repo_name = "com_googlesource_code_re2")
bazel_dep(name = "rules_license", version = "1.0.0")
# go/keep-sorted end

use_repo(
    non_module_deps,
    # go/keep-sorted start
    "dumb-init",
    "or_tools",
    "xxd",
    # go/keep-sorted end
)
