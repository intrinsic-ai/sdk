// Copyright 2023 Intrinsic Innovation LLC

syntax = "proto3";

package intrinsic_proto.data_logger;

import "google/protobuf/timestamp.proto";

message EventSourceWithTypeHints {
  string event_source = 1;  // Sanitized.

  // Type information for Intrinsic protos and ROS message types respectively.
  // Used as hints for translation or verification.
  //
  // Not in use yet.
  optional string intrinsic_typename = 6;
  optional string ros_typename = 7;
}

// Status to indicate an event source inputs upload progress.
// Event source statuses are expected to be unidirectional (increasing)
// transitions only, with numbers matching the bag status enum values.
message EventSourceStatus {
  enum EventSourceStatusEnum {
    UNSET = 0;
    UPLOAD_PENDING = 1;
    UPLOADING = 2;
    UPLOADED = 3;
    UNCOMPLETABLE = 4;

    reserved 5;  // COMPLETED.
    reserved 6;  // UNCOMPLETABLE_COMPLETED.
    FAILED = 7;
  }

  EventSourceStatusEnum status = 1;  // Unidirectional transitions only.
  optional string reason = 2;        // For UNCOMPLETABLE or FAILED.
}

// Metadata to distinguish an event source.
message EventSourceMetadata {
  EventSourceWithTypeHints event_source_with_type_hints = 1;
  EventSourceStatus status = 2;

  // Time range of the logged items.
  google.protobuf.Timestamp first_log_time = 3;
  google.protobuf.Timestamp last_log_time = 4;

  // Total number of log items in the event source.
  uint64 num_log_items = 5;

  // Total number of bytes of all messages from this event source.
  uint64 num_bytes = 6;

  // Total number of uploaded items (for creating detailed progress messages).
  uint64 uploaded_log_items = 7;

  // Total number of uploaded bytes (for creating detailed progress messages).
  uint64 uploaded_bytes = 8;
}

// Status to indicate overall bag input upload progress.
// Bag statuses are expected to be unidirectional (increasing) transitions only,
// with numbers matching the event source status enum values.
message BagStatus {
  enum BagStatusEnum {
    UNSET = 0;
    UPLOAD_PENDING = 1;
    UPLOADING = 2;
    UPLOADED = 3;
    UNCOMPLETABLE = 4;

    COMPLETED = 5;
    // Uncompletable bag was completed with missing items (best-effort).
    UNCOMPLETABLE_COMPLETED = 6;
    FAILED = 7;
  }

  BagStatusEnum status = 1;  // Unidirectional transitions only.

  // Optional reason for UNCOMPLETABLE or FAILED.
  //
  // Used for terminal statuses, if an incomplete bag (with missing log items
  // or event sources) is available.
  optional string reason = 2;
}

// Metadata reporting the status and information about a bag.
message BagMetadata {
  // Unique identifier of the bag.
  string bag_id = 1;

  BagStatus status = 2;

  // Recorded time range.
  //
  // Union of first and last log times of any event source is always a subset
  // of this.
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;

  string organization_id = 6;
  string workcell_name = 7;  // The cluster the logs originated from.

  // Event source metadata as claimed by on-prem via registration.
  repeated EventSourceMetadata event_sources = 8;

  // Human-readable description of the contents of the bag.
  optional string description = 9;

  // If known, the name of the solution running when the bag was created.
  optional string solution_name = 10;

  // The total number of log items from all event sources.
  uint64 total_log_items = 11;

  // The total number of bytes from all event sources.
  uint64 total_bytes = 12;

  // The total number of uploaded log items from all event sources.
  uint64 total_uploaded_log_items = 13;

  // The total number of uploaded bytes from all event sources.
  uint64 total_uploaded_bytes = 14;

  // Time when this bag was created.
  google.protobuf.Timestamp create_time = 15;
}

// Reference to a bag file stored on the cloud.
// Only populated if bag was generated.
message BagFileReference {
  string file_path = 1;
  uint64 file_byte_size = 2;

  google.protobuf.Timestamp completion_time = 3;
  google.protobuf.Timestamp expiry_time = 4;  // File expiry

  // Actual event source metadata that were used to create the bag.
  repeated EventSourceMetadata event_sources = 5;
}
