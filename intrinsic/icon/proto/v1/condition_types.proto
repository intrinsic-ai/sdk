// Copyright 2023 Intrinsic Innovation LLC

syntax = "proto3";

package intrinsic_proto.icon.v1;

// Comparison describes a real-time condition statement based on the
// value of a state variable.
message Comparison {
  // OpEnum describes available operations.
  enum OpEnum {
    UNKNOWN = 0;
    EQUAL = 1;
    NOT_EQUAL = 2;
    APPROX_EQUAL = 3;
    APPROX_NOT_EQUAL = 4;
    LESS_THAN_OR_EQUAL = 5;
    LESS_THAN = 6;
    GREATER_THAN_OR_EQUAL = 7;
    GREATER_THAN = 8;
  }
  // Name of the action-specific real-time state variable to test against.
  string state_variable_name = 1;

  // Comparison operation to perform between the state variable and value.
  OpEnum operation = 2;

  // Value to test against. Must match the action's StateVariableInfo::Type for
  // the state variable.
  oneof value {
    // Test against this double value.
    double double_value = 3;
    // Test against this boolean value. OpEnum must be EQUAL or NOT_EQUAL.
    bool bool_value = 4;
    // Test against this integer value.
    int64 int64_value = 6;
  }

  // Max absolute value of error (aka "epsilon") for float-point comparisons
  // APPROX_EQUAL and APPROX_NOT_EQUAL. Ignored for other operation types.
  double max_abs_error = 5;
}

// ConjunctionCondition describes a real-time condition statement based on
// multiple other (contained) conditions.
message ConjunctionCondition {
  // OpEnum describes available operations.
  enum OpEnum {
    UNKNOWN = 0;
    ALL_OF = 1;
    ANY_OF = 2;
  }

  // The operation to use.
  OpEnum operation = 1;

  // The conditions to evaluate to form this condition.
  repeated Condition conditions = 2;
}

message NegatedCondition {
  Condition condition = 1;
}

message Condition {
  oneof condition {
    Comparison comparison = 1;
    ConjunctionCondition conjunction_condition = 3;
    NegatedCondition negated_condition = 4;
  }
}
