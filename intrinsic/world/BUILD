# Copyright 2023 Intrinsic Innovation LLC

load("@com_github_grpc_grpc//bazel:python_rules.bzl", "py_proto_library")
load("@com_google_protobuf//bazel:cc_proto_library.bzl", "cc_proto_library")
load("@com_google_protobuf//bazel:proto_library.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")
load("//bazel:go_macros.bzl", "go_proto_library")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "collision_checker",
    srcs = ["collision_checker.cc"],
    hdrs = ["collision_checker.h"],
    deps = [
        ":collision_checker_world",
        ":collision_context_cc_proto",
        ":collision_types",
        ":entity",
        ":entity_id",
        "//intrinsic/motion_planning/proto/v1:motion_planning_error_cc_proto",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_member_component",
        "//intrinsic/world/component:ppr_component",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "collision_checker_utils",
    srcs = ["collision_checker_utils.cc"],
    hdrs = ["collision_checker_utils.h"],
    deps = [
        ":collision_checker_world",
        ":collision_context_cc_proto",
        ":collision_types",
        ":entity",
        ":entity_id",
        ":rule_matching",
        "//intrinsic/eigenmath",
        "//intrinsic/geometry/api:distance",
        "//intrinsic/geometry/api:distance_stats",
        "//intrinsic/math:pose3",
        "//intrinsic/production/external/simple_lru_cache",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util:eigen",
        "//intrinsic/util:macros",
        "//intrinsic/util/proto:pb_hash",
        "//intrinsic/world/component:collision_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/proto:collision_action_cc_proto",
        "//intrinsic/world/util:rule_set_util",
        "//third_party/imported/google/util/gtl:map_util",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/meta:type_traits",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "collision_checker_utils_test",
    srcs = ["collision_checker_utils_test.cc"],
    data = [
        "//intrinsic/world/test_data:4_robots_cube_world_sphere",
    ],
    deps = [
        ":collision_checker_utils",
        ":collision_context_cc_proto",
        ":entity_id",
        ":grouping",
        ":labels",
        ":rule_matching",
        ":world",
        "//intrinsic/motion_planning/path_planning:world_utils",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util/proto:pb_hash",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/test:rule_set_test_util",
        "//intrinsic/world/util:make_rule_set",
        "//intrinsic/world/util:rule_set_util",
        "//intrinsic/world/util:walk_attachment_tree",
        "//third_party/imported/google/util/gtl:map_util",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "collision_checker_world",
    hdrs = ["collision_checker_world.h"],
    deps = [
        ":entity",
        ":entity_id",
        "//intrinsic/math:pose3",
        "//intrinsic/world/component:geometry_component",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_test(
    name = "world_collision_test",
    timeout = "long",
    srcs = ["world_collision_test.cc"],
    data = [
        "//intrinsic/world/test_data:4_robots_cube_world_sphere",
    ],
    deps = [
        ":collision_context_cc_proto",
        ":entity_id",
        ":grouping",
        ":kinematic_world_views",
        ":rule_matching",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/test:rule_set_test_util",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "collision_types",
    hdrs = ["collision_types.h"],
)

cc_library(
    name = "geometry_types",
    hdrs = ["geometry_types.h"],
)

cc_library(
    name = "grouping",
    hdrs = ["grouping.h"],
    deps = [
        ":entity_id",
        ":labels",
        "//intrinsic/util:string_type",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "grouping_test",
    srcs = ["grouping_test.cc"],
    deps = [
        ":entity",
        ":entity_id",
        ":grouping",
        ":labels",
        ":world",
        "//intrinsic/math:pose3",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/test:add_object_to_world",
        "@com_google_absl//absl/container:flat_hash_set",
    ],
)

cc_test(
    name = "robots_test",
    srcs = ["robots_test.cc"],
    deps = [
        ":entity",
        ":entity_id",
        ":grouping",
        ":kinematic_world_views",
        ":labels",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/kinematics/types:joint_limits_xd",
        "//intrinsic/math:pose3",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/test:add_object_to_world",
        "//intrinsic/world/test:world_test_utils",
        "//intrinsic/world/util:walk_attachment_tree",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "kinematic_world_views",
    hdrs = [
        "cartesian_kinematic_view.h",
        "dof_kinematic_view.h",
    ],
    deps = [
        ":configuration_validation",
        ":entity_id",
        ":labels",
        "//intrinsic/eigenmath",
        "//intrinsic/kinematics/types:joint_limits_xd",
        "//intrinsic/math:pose3",
        "//intrinsic/util:string_type",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_test(
    name = "cartesian_kinematic_view_test",
    srcs = ["cartesian_kinematic_view_test.cc"],
    data = [
        "//intrinsic/motion_planning/path_planning/ik_planners:agilus_welding_cell_3parts",
        "//intrinsic/skills/apps/test_data:ur5e_world",
        "//intrinsic/world/test_data:4_robots_cube_world",
    ],
    deps = [
        ":entity_id",
        ":grouping",
        ":kinematic_world_views",
        ":labels",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/math:pose3",
        "//intrinsic/util/path_resolver",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/gzfile",
        "//intrinsic/world/util:kinematic_world_util",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "labels",
    hdrs = ["labels.h"],
    deps = [
        "//intrinsic/util:string_type",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "world",
    srcs = ["world.cc"],
    hdrs = ["world.h"],
    copts = ["-fexceptions"],
    features = ["-use_header_modules"],
    deps = [
        ":cc_proto",
        ":collision_checker",
        ":collision_checker_utils",
        ":collision_checker_world",
        ":collision_context_cc_proto",
        ":deprecation_flag",
        ":entity",
        ":entity_id",
        ":geometry_types",
        ":grouping",
        ":kinematic_world_views",
        ":kinematics_builder",
        ":labels",
        ":rule_matching",
        ":world_upgrade",
        "//intrinsic/blue_shapes",
        "//intrinsic/eigenmath",
        "//intrinsic/geometry:legacy",
        "//intrinsic/geometry/api:affine_transform_of",
        "//intrinsic/geometry/api:affine_transform_of_geometry",
        "//intrinsic/geometry/api:distance",
        "//intrinsic/geometry/api:fuse_geometries",
        "//intrinsic/geometry/api:geometry",
        "//intrinsic/geometry/storage:dummy_storage",
        "//intrinsic/geometry/storage:geometry_deserializer",
        "//intrinsic/geometry/storage:geometry_serializer",
        "//intrinsic/geometry/storage:gzf_storage",
        "//intrinsic/kinematics:skeleton",
        "//intrinsic/math:pose3",
        "//intrinsic/math:proto_conversion",
        "//intrinsic/math:tf2_convert_intrinsic",
        "//intrinsic/math/proto:header_cc_proto",
        "//intrinsic/math/proto:quaternion_cc_proto",
        "//intrinsic/math/proto:tf_message_cc_proto",
        "//intrinsic/math/proto:transform_cc_proto",
        "//intrinsic/math/proto:transform_stamped_cc_proto",
        "//intrinsic/math/proto:vector3_cc_proto",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util:macros",
        "//intrinsic/util/object_store:object_ref",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/world/aspects:chained_robot_cartesian_kinematic_view",
        "//intrinsic/world/aspects:entity_dof_kinematic_view",
        "//intrinsic/world/aspects:entity_grouping",
        "//intrinsic/world/aspects:entity_robot_cartesian_kinematic_view",
        "//intrinsic/world/aspects:entity_world_interface",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:collections_member_component",
        "//intrinsic/world/component:collision_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:gripper_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:physics_component",
        "//intrinsic/world/component:ppr_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/component:sensor_component",
        "//intrinsic/world/component:simulation_component",
        "//intrinsic/world/gzfile",
        "//intrinsic/world/internal:inner_world",
        "//intrinsic/world/proto:collections_component_cc_proto",
        "//intrinsic/world/proto:gripper_component_cc_proto",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:physics_component_cc_proto",
        "//intrinsic/world/proto:sensor_component_cc_proto",
        "//intrinsic/world/proto:world_entity_cc_proto",
        "//intrinsic/world/proto:world_fragment_cc_proto",
        "//intrinsic/world/util:rule_set_util",
        "//third_party/imported/google/util/gtl:iterator_adaptors",
        "//third_party/imported/google/util/gtl:map_util",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/log:die_if_null",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/time",
        "@com_google_protobuf//:protobuf",
        "@com_google_protobuf//src/google/protobuf/io",
        "@ros2_common_interfaces//:cpp_geometry_msgs",
        "@ros2_geometry2//:tf2",
        "@ros2_geometry2//:tf2_ros",
        "@ros2_rclcpp//:rclcpp",
    ],
)

cc_test(
    name = "world_test",
    srcs = ["world_test.cc"],
    data = [
        "//intrinsic/world/test_data:cuboid_2_3_4.obj",
    ],
    deps = [
        ":cc_proto",
        ":collision_context_cc_proto",
        ":entity",
        ":entity_id",
        ":geometry_types",
        ":grouping",
        ":kinematic_world_views",
        ":labels",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/geometry/api:affine_transform_of_geometry",
        "//intrinsic/geometry/api:geometry",
        "//intrinsic/geometry/api:io",
        "//intrinsic/geometry/api:shape_factory",
        "//intrinsic/geometry/storage:geometry_serializer",
        "//intrinsic/geometry/storage:in_memory_storage",
        "//intrinsic/geometry/testing:prepare_for_distance_queries",
        "//intrinsic/math:pose3",
        "//intrinsic/math/proto:tf_message_cc_proto",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util:macros",
        "//intrinsic/util/path_resolver",
        "//intrinsic/util/proto:parse_text_proto",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:collections_member_component",
        "//intrinsic/world/component:collision_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:physics_component",
        "//intrinsic/world/component:ppr_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/component:simulation_component",
        "//intrinsic/world/gzfile",
        "//intrinsic/world/proto:collections_component_cc_proto",
        "//intrinsic/world/proto:collision_action_cc_proto",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:world_entity_cc_proto",
        "//intrinsic/world/proto:world_fragment_cc_proto",
        "//intrinsic/world/test:world_test_utils",
        "//intrinsic/world/util:collision_checker_selector",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_protobuf//:protobuf_lite",
        "@or_tools//ortools/base:path",
    ],
)

cc_library(
    name = "world_acl_spec",
    srcs = ["world_acl_spec.cc"],
    hdrs = ["world_acl_spec.h"],
    deps = [
        ":entity_id",
        ":world_entity_acl_spec",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/world/proto:acl_spec_cc_proto",
        "//third_party/imported/google/util/gtl:iterator_adaptors",
        "//third_party/imported/google/util/gtl:map_util",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "world_acl_spec_test",
    srcs = ["world_acl_spec_test.cc"],
    deps = [
        ":entity_id",
        ":world_acl_spec",
        ":world_entity_acl_spec",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/proto:acl_spec_cc_proto",
        "//third_party/imported/google/util/gtl:flat_set",
    ],
)

cc_library(
    name = "world_entity_acl_spec",
    srcs = ["world_entity_acl_spec.cc"],
    hdrs = ["world_entity_acl_spec.h"],
    deps = [
        "//intrinsic/world/proto:acl_spec_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "world_entity_acl_spec_test",
    srcs = ["world_entity_acl_spec_test.cc"],
    deps = [
        ":world_entity_acl_spec",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/proto:acl_spec_cc_proto",
        "@com_google_absl//absl/status",
    ],
)

proto_library(
    name = "proto",
    srcs = ["world.proto"],
    deps = [
        ":collision_context_proto",
        "//intrinsic/world/proto:world_entity_proto",
    ],
)

py_proto_library(
    name = "world_py_pb2",
    deps = [":proto"],
)

go_proto_library(
    name = "go_proto",
    go_deps = [
        ":collision_context_go_proto",
        "//intrinsic/world/proto:world_entity_go_proto",
    ],
    deps = [":proto"],
)

cc_proto_library(
    name = "cc_proto",
    deps = [":proto"],
)

cc_library(
    name = "collision_checker_no_merge_impl",
    srcs = ["collision_checker_no_merge_impl.cc"],
    hdrs = ["collision_checker_no_merge_impl.h"],
    deps = [
        ":collision_checker",
        ":collision_checker_utils",
        ":collision_checker_world",
        ":collision_context_cc_proto",
        ":collision_types",
        ":entity",
        ":entity_id",
        ":rule_matching",
        "//intrinsic/geometry/api:distance_stats",
        "//intrinsic/math:pose3",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/util:rule_set_util",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/log:die_if_null",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/synchronization",
    ],
)

cc_test(
    name = "collision_checker_no_merge_impl_test",
    timeout = "long",
    srcs = ["collision_checker_no_merge_impl_test.cc"],
    data = [
        "//intrinsic/world/test_data:capsule_r2_z3.obj",
        "//intrinsic/world/test_data:cuboid_2_3_4.obj",
        "//intrinsic/world/test_data:cylinder_30.obj",
        "//intrinsic/world/test_data:cylinder_40.obj",
        "//intrinsic/world/test_data:ellipsoid_rx_10_ry_20_rz_15.obj",
        "//intrinsic/world/test_data:rule_set_example.pbtxt",
        "//intrinsic/world/test_data:sphere_r20.obj",
    ],
    shard_count = 4,
    deps = [
        ":collision_checker",
        ":collision_checker_no_merge_impl",
        ":collision_checker_utils",
        ":collision_context_cc_proto",
        ":collision_types",
        ":entity_id",
        ":geometry_types",
        ":labels",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:pose3_utils",
        "//intrinsic/geometry/api:affine_transform_of_geometry",
        "//intrinsic/geometry/api:distance",
        "//intrinsic/geometry/api:distance_stats",
        "//intrinsic/geometry/api:geometry",
        "//intrinsic/geometry/api:io",
        "//intrinsic/geometry/api:shape_factory",
        "//intrinsic/geometry/testing:prepare_for_distance_queries",
        "//intrinsic/math:pose3",
        "//intrinsic/util:macros",
        "//intrinsic/util/path_resolver",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/test:world_test_utils",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "update_world",
    srcs = ["update_world.cc"],
    hdrs = ["update_world.h"],
    deps = [
        ":deprecation_flag",
        ":entity",
        ":entity_id",
        ":geometry_types",
        ":grouping",
        ":kinematic_world_views",
        ":labels",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/geometry/api:io",
        "//intrinsic/math:pose3",
        "//intrinsic/math:proto_conversion",
        "//intrinsic/motion_planning/path_planning:kinematics_system_proxy_util",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util:eigen",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/utils/proto_conversion:blue_wrappers",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/objects:object_world",
        "//intrinsic/world/proto:entity_search_cc_proto",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:world_updates_cc_proto",
        "//intrinsic/world/service:world_service_cc_proto",
        "//intrinsic/world/util:entity_search_util",
        "//intrinsic/world/util:make_rule_set",
        "//intrinsic/world/util:walk_attachment_tree",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "update_world_test",
    srcs = ["update_world_test.cc"],
    deps = [
        ":collision_context_cc_proto",
        ":entity",
        ":entity_id",
        ":geometry_types",
        ":grouping",
        ":kinematic_world_views",
        ":labels",
        ":update_world",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/geometry/api:shape_factory",
        "//intrinsic/math:pose3",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util:eigen",
        "//intrinsic/util/proto:parse_text_proto",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:collections_member_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/objects:object_world_ids",
        "//intrinsic/world/objects/test:object_world_test_utils",
        "//intrinsic/world/proto:collision_action_cc_proto",
        "//intrinsic/world/proto:collision_settings_cc_proto",
        "//intrinsic/world/proto:entity_search_cc_proto",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:world_updates_cc_proto",
        "//intrinsic/world/service:world_service_cc_proto",
        "//intrinsic/world/test:world_test_utils",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/meta:type_traits",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "material_script_name_to_material",
    hdrs = ["material_script_name_to_material.h"],
    deps = [
        "//intrinsic/geometry/api:material",
        "//third_party/imported/google/util/gtl:flat_map",
        "@com_google_absl//absl/strings",
    ],
)

proto_library(
    name = "collision_context_proto",
    srcs = ["collision_context.proto"],
    deps = [
        "//intrinsic/world/proto:collision_action_proto",
    ],
)

py_proto_library(
    name = "collision_context_py_pb2",
    deps = [":collision_context_proto"],
)

go_proto_library(
    name = "collision_context_go_proto",
    go_deps = [
        "//intrinsic/world/proto:collision_action_go_proto",
    ],
    deps = [":collision_context_proto"],
)

cc_proto_library(
    name = "collision_context_cc_proto",
    deps = [":collision_context_proto"],
)

cc_library(
    name = "rule_matching",
    srcs = ["rule_matching.cc"],
    hdrs = ["rule_matching.h"],
    deps = [
        ":collision_context_cc_proto",
        ":entity_id",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/world/proto:collision_action_cc_proto",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log:check",
    ],
)

cc_test(
    name = "rule_matching_test",
    srcs = ["rule_matching_test.cc"],
    data = [
        "//intrinsic/world/test_data:4_robots_cube_world",
    ],
    deps = [
        ":collision_context_cc_proto",
        ":entity_id",
        ":labels",
        ":rule_matching",
        ":world",
        "//intrinsic/util/proto:parse_text_proto",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/proto:collision_action_cc_proto",
        "//intrinsic/world/test:rule_set_test_util",
        "//third_party/imported/google/util/gtl:map_util",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_test(
    name = "print_world_test_cc",
    srcs = ["print_world_test.cc"],
    deps = [
        ":entity_id",
        ":print_world_lib",
        ":world",
        "//intrinsic/math:pose3",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/test:add_object_to_world",
    ],
)

cc_library(
    name = "configuration_validation",
    hdrs = ["configuration_validation.h"],
    deps = [
        "//intrinsic/eigenmath",
    ],
)

cc_library(
    name = "deprecation_flag",
    srcs = ["deprecation_flag.cc"],
    hdrs = ["deprecation_flag.h"],
    deps = [
        "@com_google_absl//absl/flags:flag",
    ],
)

cc_library(
    name = "entity",
    srcs = ["entity.cc"],
    hdrs = ["entity.h"],
    deps = [
        ":entity_id",
        ":labels",
        ":world_entity_acl_spec",
        "//intrinsic/geometry/storage:dummy_storage",
        "//intrinsic/geometry/storage:geometry_deserializer",
        "//intrinsic/geometry/storage:geometry_serializer",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:collections_member_component",
        "//intrinsic/world/component:collision_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:gripper_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:outfeed_component",
        "//intrinsic/world/component:physics_component",
        "//intrinsic/world/component:ppr_component",
        "//intrinsic/world/component:projector_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/component:sensor_component",
        "//intrinsic/world/component:simulation_component",
        "//intrinsic/world/component:spawner_component",
        "//intrinsic/world/component:user_data_component",
        "//intrinsic/world/proto:attachment_component_cc_proto",
        "//intrinsic/world/proto:collections_component_cc_proto",
        "//intrinsic/world/proto:collections_member_component_cc_proto",
        "//intrinsic/world/proto:collision_component_cc_proto",
        "//intrinsic/world/proto:geometry_component_cc_proto",
        "//intrinsic/world/proto:gripper_component_cc_proto",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:outfeed_component_cc_proto",
        "//intrinsic/world/proto:physics_component_cc_proto",
        "//intrinsic/world/proto:ppr_component_cc_proto",
        "//intrinsic/world/proto:robot_component_cc_proto",
        "//intrinsic/world/proto:sensor_component_cc_proto",
        "//intrinsic/world/proto:user_data_component_cc_proto",
        "//intrinsic/world/proto:world_entity_cc_proto",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:differencer",
    ],
)

cc_test(
    name = "entity_test",
    srcs = ["entity_test.cc"],
    deps = [
        ":entity",
        ":entity_id",
        ":labels",
        ":world_entity_acl_spec",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/geometry/storage:in_memory_storage",
        "//intrinsic/math:pose3",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:collections_member_component",
        "//intrinsic/world/component:collision_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:gripper_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:outfeed_component",
        "//intrinsic/world/component:physics_component",
        "//intrinsic/world/component:ppr_component",
        "//intrinsic/world/component:projector_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/component:sensor_component",
        "//intrinsic/world/component:simulation_component",
        "//intrinsic/world/component:spawner_component",
        "//intrinsic/world/component:user_data_component",
        "//intrinsic/world/proto:collections_component_cc_proto",
        "//intrinsic/world/proto:gripper_component_cc_proto",
        "//intrinsic/world/proto:world_entity_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "entity_id",
    srcs = ["entity_id.cc"],
    hdrs = ["entity_id.h"],
    deps = [
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util:aggregate_type",
    ],
)

cc_test(
    name = "entity_id_test",
    srcs = ["entity_id_test.cc"],
    deps = [
        ":entity_id",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/hash:hash_testing",
    ],
)

cc_test(
    name = "entity_physical_world_test",
    srcs = ["entity_physical_world_test.cc"],
    deps = [
        ":entity",
        ":entity_id",
        ":geometry_types",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/eigenmath:so3",
        "//intrinsic/geometry/api:affine_transform_of_geometry",
        "//intrinsic/geometry/api:shape_factory",
        "//intrinsic/math:pose3",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/aspects:entity_world_interface",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collision_component",
        "//intrinsic/world/component:geometry_component",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googleapis//google/rpc:code_cc_proto",
    ],
)

cc_test(
    name = "entity_collision_world_test",
    srcs = ["entity_collision_world_test.cc"],
    data = [
        "//intrinsic/world/test_data:capsule_r2_z3.obj",
        "//intrinsic/world/test_data:cuboid_2_3_4.obj",
    ],
    tags = [
        "nofastbuild",  # times out
    ],
    deps = [
        ":collision_context_cc_proto",
        ":entity",
        ":entity_id",
        ":geometry_types",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/geometry/api:affine_transform_of_geometry",
        "//intrinsic/geometry/api:geometry",
        "//intrinsic/geometry/api:io",
        "//intrinsic/geometry/api:shape_factory",
        "//intrinsic/geometry/testing:are_equivalent",
        "//intrinsic/geometry/testing:prepare_for_distance_queries",
        "//intrinsic/math:pose3",
        "//intrinsic/util:macros",
        "//intrinsic/util/path_resolver",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/aspects:entity_world_interface",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/test:add_object_to_world",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "print_world_lib",
    srcs = ["print_world.cc"],
    hdrs = ["print_world.h"],
    deps = [
        ":entity",
        ":entity_id",
        ":grouping",
        ":kinematic_world_views",
        ":labels",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/geometry/api:geometry",
        "//intrinsic/util:eigen",
        "//intrinsic/util:macros",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:geometry_component",
        "//intrinsic/world/component:ppr_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/component:user_data_component",
        "//intrinsic/world/proto:robot_component_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "dof_kinematic_view_mock",
    testonly = 1,
    hdrs = ["dof_kinematic_view_mock.h"],
    deps = [
        ":configuration_validation",
        ":entity_id",
        ":kinematic_world_views",
        ":labels",
        "//intrinsic/eigenmath",
        "//intrinsic/kinematics/types:joint_limits_xd",
        "//intrinsic/util/testing:gtest_wrapper",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_library(
    name = "kinematics_builder",
    srcs = ["kinematics_builder.cc"],
    hdrs = ["kinematics_builder.h"],
    deps = [
        ":entity",
        ":entity_id",
        "//intrinsic/eigenmath",
        "//intrinsic/kinematics",
        "//intrinsic/kinematics:skeleton",
        "//intrinsic/math:pose3",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util:aggregate_type",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/world/aspects:entity_world_interface",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collections_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:physics_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//third_party/imported/google/util/gtl:flat_set",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
    ],
)

cc_test(
    name = "kinematics_builder_test",
    srcs = ["kinematics_builder_test.cc"],
    data = [
        "//intrinsic/motion_planning/path_planning/ik_planners:agilus_welding_cell_3parts",
        "//intrinsic/world/test_data:4_robots_cube_world",
    ],
    deps = [
        ":entity",
        ":entity_id",
        ":grouping",
        ":kinematic_world_views",
        ":kinematics_builder",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/icon/utils:realtime_status_matchers",
        "//intrinsic/kinematics",
        "//intrinsic/kinematics:skeleton",
        "//intrinsic/kinematics:state",
        "//intrinsic/kinematics/types:joint_state",
        "//intrinsic/math:pose3",
        "//intrinsic/production/external/intops:strong_int",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/test:add_object_to_world",
        "//intrinsic/world/test:rule_set_test_util",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/types:span",
    ],
)

cc_test(
    name = "world_subset_test",
    srcs = ["world_subset_test.cc"],
    deps = [
        ":entity",
        ":entity_id",
        ":world",
        "//intrinsic/eigenmath",
        "//intrinsic/eigenmath:matchers",
        "//intrinsic/math:pose3",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:collision_component",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "world_upgrade",
    srcs = ["world_upgrade.cc"],
    hdrs = ["world_upgrade.h"],
    deps = [
        ":cc_proto",
        ":deprecation_flag",
        "//intrinsic/math:proto_conversion",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/utils/proto_conversion:blue_wrappers",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:world_entity_cc_proto",
        "//intrinsic/world/proto:world_fragment_cc_proto",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "build_tree_skeleton_from_world",
    srcs = ["build_tree_skeleton_from_world.cc"],
    hdrs = ["build_tree_skeleton_from_world.h"],
    deps = [
        ":entity",
        ":entity_id",
        ":world",
        "//intrinsic/icon/utils:realtime_status_or",
        "//intrinsic/kinematics",
        "//intrinsic/kinematics:skeleton",
        "//intrinsic/util/status:status_builder",
        "//intrinsic/util/status:status_macros",
        "//intrinsic/world/component:attachment_component",
        "//intrinsic/world/component:kinematics_component",
        "//intrinsic/world/component:physics_component",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/util:walk_attachment_tree",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "world_upgrade_test",
    srcs = ["world_upgrade_test.cc"],
    deps = [
        ":cc_proto",
        ":world",
        ":world_upgrade",
        "//intrinsic/geometry/storage:dummy_storage",
        "//intrinsic/util/proto:parse_text_proto",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/proto:kinematics_component_cc_proto",
        "//intrinsic/world/proto:world_entity_cc_proto",
        "//intrinsic/world/proto:world_fragment_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
    ],
)

cc_test(
    name = "build_tree_skeleton_from_world_test",
    size = "small",
    srcs = ["build_tree_skeleton_from_world_test.cc"],
    data = [
        "//intrinsic/world/test_data:gluer_wedge_table_cell_world",
    ],
    deps = [
        ":build_tree_skeleton_from_world",
        ":entity_id",
        ":world",
        "//intrinsic/math:pose3",
        "//intrinsic/util/path_resolver",
        "//intrinsic/util/testing:gtest_wrapper_main",
        "//intrinsic/world/component:robot_component",
        "//intrinsic/world/gzfile",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)
