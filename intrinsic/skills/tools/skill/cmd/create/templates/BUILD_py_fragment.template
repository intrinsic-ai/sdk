{{/*
Copyright 2023 Intrinsic Innovation LLC
*/ -}}

{{/*empty line at top since this template is appended to an existing file*/}}
proto_library(
    name = "{{.SkillNameSnakeCase}}_proto",
    srcs = ["{{.SkillNameSnakeCase}}.proto"],
)

py_proto_library(
    name = "{{.SkillNameSnakeCase}}_py_pb2",
    deps = [":{{.SkillNameSnakeCase}}_proto"],
)

skill_manifest(
    name = "{{.SkillNameSnakeCase}}_py_manifest",
    src = "{{.SkillNameSnakeCase}}.manifest.textproto",
    deps = [":{{.SkillNameSnakeCase}}_proto"],
)

py_library(
    name = "{{.SkillNameSnakeCase}}_py",
    srcs = ["{{.SkillNameSnakeCase}}.py"],
    srcs_version = "PY3",
    deps = [
        ":{{.SkillNameSnakeCase}}_py_pb2",
        "@ai_intrinsic_sdks//intrinsic/skills/proto:equipment_py_pb2",
        "@ai_intrinsic_sdks//intrinsic/skills/proto:footprint_py_pb2",
        "@ai_intrinsic_sdks//intrinsic/skills/python:proto_utils",
        "@ai_intrinsic_sdks//intrinsic/skills/python:skill_interface",
        "@ai_intrinsic_sdks//intrinsic/util:decorators",
        "@com_google_absl_py//absl/logging",
        "@com_google_protobuf//:protobuf_python",
    ],
)

py_test(
    name = "{{.SkillNameSnakeCase}}_test",
    size = "small",
    srcs = ["{{.SkillNameSnakeCase}}_test.py"],
    main = "{{.SkillNameSnakeCase}}_test.py",
    deps = [
        ":{{.SkillNameSnakeCase}}_py",
        "@ai_intrinsic_sdks//intrinsic/skills/testing:skill_test_utils",
    ],
)

py_skill(
    name = "{{.SkillNameSnakeCase}}",
    manifest = ":{{.SkillNameSnakeCase}}_py_manifest",
    deps = [
        ":{{.SkillNameSnakeCase}}_py",
        ":{{.SkillNameSnakeCase}}_py_pb2",
    ]
)

py_binary(
    name = "{{.SkillNameSnakeCase}}_integration_test",
    srcs = ["{{.SkillNameSnakeCase}}_integration_test.py"],
    main = "{{.SkillNameSnakeCase}}_integration_test.py",
    deps = [
        "@ai_intrinsic_sdks//intrinsic/solutions:behavior_tree",
        "@ai_intrinsic_sdks//intrinsic/solutions:deployments",
    ],
)
