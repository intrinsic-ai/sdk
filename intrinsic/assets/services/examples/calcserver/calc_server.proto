// Copyright 2023 Intrinsic Innovation LLC

syntax = "proto3";

package intrinsic_proto.services;

import "intrinsic/assets/proto/field_metadata.proto";
import "intrinsic/assets/proto/v1/resolved_dependency.proto";

enum CalculatorOperation {
  CALCULATOR_OPERATION_UNSPECIFIED = 0;
  CALCULATOR_OPERATION_ADD = 1;
  CALCULATOR_OPERATION_MULTIPLY = 2;
  CALCULATOR_OPERATION_SUBTRACT = 3;
  CALCULATOR_OPERATION_DIVIDE = 4;
  // This operation calls a CustomCalculation service to perform the
  // calculation.
  CALCULATOR_OPERATION_CUSTOM = 5;
}

message CalculatorConfig {
  // True to reverse the order of operands when calculating (i.e., y then x
  // rather than x then y).
  bool reverse_order = 1;

  optional intrinsic_proto.assets.v1.ResolvedDependency custom_calculation = 2
      [(intrinsic_proto.assets.field_metadata).dependency = {
        requires: "grpc://intrinsic_proto.services.CustomCalculation",
      }];
}

message CalculatorRequest {
  CalculatorOperation operation = 1;
  int64 x = 2;
  int64 y = 3;
}

message CalculatorResponse {
  int64 result = 1;
}

// Calculator is an example service that performs basic calculations.
service Calculator {
  // Calculate performs basic calculator operations on two input numbers.
  rpc Calculate(CalculatorRequest) returns (CalculatorResponse) {}
}

message CustomCalculateRequest {
  int64 x = 1;
  int64 y = 2;
}

// CustomCalculation can be used to extend the Calculator service with a custom
// calculation.
//
// The CustomCalculation service must be packaged as a Service Asset and passed
// as a dependency to the Calculator service.
service CustomCalculation {
  // Calculate performs a custom operation on two input numbers.
  rpc Calculate(CustomCalculateRequest) returns (CalculatorResponse) {}
}
