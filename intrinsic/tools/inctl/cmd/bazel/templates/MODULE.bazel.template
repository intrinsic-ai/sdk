{{/*
Copyright 2023 Intrinsic Innovation LLC
*/ -}}

module(name="{{.WorkspaceName}}")

bazel_dep(name = "ai_intrinsic_sdks")
{{ if .SDKRepository -}}
archive_override(
    module_name = "ai_intrinsic_sdks",
    {{if eq .SDKVersion "latest" -}}
    # To pin a version change the following to, e.g.:
    #   urls = "{{.SDKRepository}}/archive/refs/tags/intrinsic.platform.20221231.RC00.tar.gz",
    #   strip_prefix = "sdk-intrinsic.platform.20221231.RC00/"
    strip_prefix = "sdk-main/",
    urls = ["{{.SDKRepository}}/archive/refs/heads/main.tar.gz"],
    {{- else -}}
    strip_prefix = "{{.SDKStripPrefix}}",
    urls = ["{{.SDKRepository}}/archive/refs/tags/{{.SDKVersion}}.tar.gz"],
    {{- end}}
)
{{- else if .LocalSDKPath -}}
local_path_override(
    module_name = "ai_intrinsic_sdks",
    path = "{{.LocalSDKPath}}",
)
{{- end }}

# Direct dependencies
bazel_dep(name = "abseil-cpp", version = "20250127.1", repo_name = "com_google_absl")
bazel_dep(name = "abseil-py", version = "2.1.0", repo_name = "com_google_absl_py")
bazel_dep(name = "bazel_skylib", version = "1.8.0")
bazel_dep(name = "googletest", version = "1.17.0", repo_name = "com_google_googletest")
bazel_dep(name = "grpc", version = "1.73.1", repo_name = "com_github_grpc_grpc")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "protobuf", version = "30.1", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_go", version = "0.55.1", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_python", version = "1.4.1")

# C++ toolchain
bazel_dep(name = "toolchains_llvm", version = "1.4.0")

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    llvm_version = "20.1.2",
)

non_module_deps = use_extension("@ai_intrinsic_sdks//bazel:non_module_deps.bzl", "non_module_deps_ext")
use_repo(non_module_deps, "intrinsic_llvm_sysroot")

llvm.sysroot(
    label = "@intrinsic_llvm_sysroot//:all_files",
    targets = ["linux-x86_64"],
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all")

bazel_dep(name = "rules_cc", version = "0.1.2")
bazel_dep(name = "rules_foreign_cc", version = "0.15.0")

# Google API bindings
bazel_dep(name = "googleapis", version = "0.0.0-20240819-fe8ba054a", repo_name = "com_google_googleapis")

switched_rules = use_extension("@com_google_googleapis//:extensions.bzl", "switched_rules")
switched_rules.use_languages(
    cc = True,
    go = True,
    grpc = True,
    python = True,
)
use_repo(switched_rules, "com_google_googleapis_imports")

# OCI images
bazel_dep(name = "rules_oci", version = "2.2.6")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
use_repo(
    oci,
    "distroless_base",
    "distroless_python3",
)
